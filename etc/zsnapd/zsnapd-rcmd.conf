[DEFAULT]

[zsnapd-rcmd]
# Uncomment to set up syslog logging
# see pydoc3 syslog and man 3 syslog for value names with 'LOG_'
# prefix stripped
syslog_facility = AUTH
log_level = INFO
#
# Uncomment to set up file logging
#log_file = /var/log/zsnapd/zsnapd-rcmd.log
#log_file_max_size_kbytes = 1024
#log_file_backup_count = 3

# Shell used to execute commands
rshell = /bin/rbash
#rshell_path = /usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin

# Regex processing settings
regex_comp_prog = (gzip|bzip2|xz|lzma|lz4)
regex_compress = (\s*\|\s*%(regex_comp_prog)s -c\s*){0,1}
regex_decompress = (\s*%(regex_comp_prog)s -cd\s*\|\s*){0,1}
regex_dataset = [-_:./a-zA-Z0-9]+
regex_mountpoint = [-_./ a-zA-Z0-9]+
regex_snapshot = %(regex_dataset)s@[-_:.a-zA-Z0-9]+
regex_send_args = (-[LecpwR]{1,6} ){0,1}
regex_receive_args = (-[su]{1,2} ){0,1}(-x mountpoint ){0,1}(-o "mountpoint=%(regex_mountpoint)s" ){0,1}
regex_incr_delta = (-[iI] %(regex_snapshot)s ){0,1}
regex_resume_args = (-t 1-[0-9a-f]+-[0-9a-f]+-[0-9a-f]+){0,1}
regex_mbuffer_common = -s [0-9]{1,7}[bBkM] -m [0-9]{1,12}[kMG]
regex_mbuffer_push = (\s*mbuffer -q -v 0 %(regex_mbuffer_common)s\s*\|\s*){0,1}
regex_mbuffer_pull = (\s*\|\s*mbuffer -q -v 0 %(regex_mbuffer_common)s\s*){0,1}
regex_grep_filter_dataset = (\|\s*grep \^%(regex_dataset)s@\s*){0,1}
# SECURITY Make SURE each rcmd_ filter starts with ^ and ends with $ to make sure of absolute matches.
# SECURITY Also don't use  .* in a regex, asthat matches everything!
# The following flags can be used to turn off/on checks for above
# regex_error_on_^ = True
# regex_error_on_.* = True
# regex_error_on_$ = True
# Commands cannot be absolute pathed because of use of rbash.  Add directory to rshell_path above
# Commenting out setting will turn off permission for that command
rcmd_zfs_get_snapshots2 = ^zfs list -pH -s creation -o name,creation -t snapshot\s*%(regex_dataset)s\s*\|\|\s*true$
rcmd_zfs_get_datasets = ^zfs list -pH -o name,mountpoint %(regex_dataset)s$
rcmd_zfs_snapshot = ^zfs snapshot %(regex_snapshot)s$
rcmd_zfs_replicate_push = ^%(regex_mbuffer_push)s%(regex_decompress)szfs receive %(regex_receive_args)s-F %(regex_dataset)s$
rcmd_zfs_replicate_pull = ^zfs send %(regex_send_args)s%(regex_incr_delta)s%(regex_snapshot)s%(regex_compress)s%(regex_mbuffer_pull)s$
rcmd_zfs_replicate_pull2 = ^zfs send %(regex_send_args)s%(regex_resume_args)s%(regex_compress)s%(regex_mbuffer_pull)s$
rcmd_zfs_holds = ^zfs list -H -r -d 1 -t snapshot -o name %(regex_dataset)s \| xargs -d \"\\n\" zfs holds -H$
rcmd_zfs_is_held = ^zfs holds %(regex_snapshot)s$
rcmd_zfs_hold = ^zfs hold zsm %(regex_snapshot)s$
rcmd_zfs_release = ^zfs release zsm %(regex_snapshot)s\s*\|\|\s*true$
rcmd_zfs_get_size = ^zfs send -nv %(regex_send_args)s%(regex_incr_delta)s%(regex_snapshot)s$
rcmd_zfs_get_size2 = ^zfs send -nv %(regex_send_args)s%(regex_resume_args)s$
rcmd_zfs_destroy = ^zfs destroy %(regex_snapshot)s$
rcmd_zfs_receive_abort = ^zfs receive -A %(regex_dataset)s$
rcmd_zfs_get_receive_resume_token = ^zfs get receive_resume_token -pHo value %(regex_dataset)s\s*\|\|\s*true$
# Uncomment below when you want to run one of these on this host
# Commands cannot be absolute pathed because of use of rbash.  Add directory to rshell_path above
# Commenting out setting will turn off permission for that command
#rcmd_preexec = ^true$
#rcmd_postexec = ^true$
#rcmd_replicate_postexec = ^true$
#rcmd_aux0 = ^true$
#rcmd_aux1 = ^true$
#rcmd_aux2 = ^true$
#rcmd_aux3 = ^true$
#rcmd_aux4 = ^true$
#rcmd_aux5 = ^true$
#rcmd_aux6 = ^true$
#rcmd_aux7 = ^true$
#rcmd_aux8 = ^true$
#rcmd_aux9 = ^true$
